//
//  TableViewController.swift
//  EmojiDictionaryProject
//
//  Created by Timur Saidov on 12/10/2018.
//  Copyright ¬© 2018 Timur Saidov. All rights reserved.
//

import UIKit

// Present Modally - —Å–∏–≥–≤–µ–π, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π, –∫–æ–≥–¥–∞ —ç–∫—Ä–∞–Ω –ø–æ—è–≤–ª—è–µ—Ç—Å—è, –∞ –∑–∞—Ç–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π. Show - —Å–∏–≥–≤–µ–π, –∫–æ–≥–¥–∞ —ç–∫—Ä–∞–Ω –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è, –∞ –∏–¥–µ—Ç –¥–∞–ª–µ–µ –≤–≥–ª—É–±—å.

class TableViewController: UITableViewController {
    
    var emoji: [Emoji] = [
        Emoji(symbol: "üê∏", name: "–õ—è–≥—É—à–∫–∞", description: "–ó–µ–ª—ë–Ω–∞—è –ª—è–≥—É—à–∫–∞", usage: "–ü—Ä—ã–∂–∫–∏"),
        Emoji(symbol: "üê∂", name: "–°–æ–±–∞–∫–∞", description: "–¢–∏–ø–∏—á–Ω—ã–π –ø–µ—Å", usage: "–í–µ—Ä–Ω–æ—Å—Ç—å"),
        Emoji(symbol: "üê±", name: "–ö–æ—Ç", description: "–ú–∏–ª—ã–π –∫–æ—Ç", usage: "–•–∏—Ç—Ä–æ—Å—Ç—å"),
        Emoji(symbol: "üê∞", name: "–ö—Ä–æ–ª–∏–∫", description: "–£—à–∞—Å—Ç—ã–π –∫—Ä–æ–ª–∏–∫", usage: "–ë—ã—Å—Ç—Ä–æ—Ç–∞"),
        Emoji(symbol: "üê®", name: "–ö–æ–∞–ª–∞", description: "–ö–æ–∞–ª–∞", usage: "–õ–µ–Ω—å"),
        Emoji(symbol: "üëΩ", name: "–ò–Ω–æ–ø–ª–∞–Ω–µ—Ç—è–Ω–∏–Ω", description: "–ù–õ–û", usage: "–ó–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å"),
        Emoji(symbol: "üê∑", name: "–°–≤–∏–Ω—å—è", description: "–°–≤–∏–Ω—å—è", usage: "–ì—Ä—è–∑—å")]

    override func viewDidLoad() {
        super.viewDidLoad()

        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        self.navigationItem.leftBarButtonItem = self.editButtonItem
    }

    // MARK: - Table view data source
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return emoji.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        // indexPath - –ø–∞—Ä–∞–º–µ—Ç—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –ª–µ–∂–∞—Ç 2 –∑–Ω–∞—á–µ–Ω–∏—è: –Ω–æ–º–µ—Ä —Å–µ–∫—Ü–∏–∏ –∏ –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –≤ –¥–∞–Ω–Ω–æ–π —Å–µ–∫—Ü–∏–∏.
        let cell = tableView.dequeueReusableCell(withIdentifier: "Cell", for: indexPath) as! TableViewCell
        
        let emoji = self.emoji[indexPath.row]
        cell.update(with: emoji)
        
        return cell
    }
    
    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è (–ø–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏) —è—á–µ–µ–∫ –Ω–∞ Table View (–Ω–∞ view).
    override func tableView(_ tableView: UITableView, moveRowAt sourceIndexPath: IndexPath, to destinationIndexPath: IndexPath) {
        let movedEmoji = emoji.remove(at: sourceIndexPath.row) // –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
        emoji.insert(movedEmoji, at: destinationIndexPath.row) // –í—Å—Ç–∞–≤–∫–∞ –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤ –Ω–∞ –º–µ—Å—Ç–æ, –∫—É–¥–∞ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
        tableView.reloadData() // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–∏—Ü—ã.
    }
    
    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCell.EditingStyle {
        return .delete
    }
    
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            // Delete the row from the data source
            emoji.remove(at: indexPath.row)
//            tableView.beginUpdates()
            tableView.deleteRows(at: [indexPath], with: .fade) // –£–¥–∞–ª—è–µ—Ç—Å—è —è—á–µ–π–∫–∞, –∏ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è 2 –º–µ—Ç–æ–¥–∞: numberOfSections –∏ tableView(numberOfRowsInSection), —á—Ç–æ–±—ã –∑–∞–Ω–æ–≤–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å —è—á–µ–π–∫—É. –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç –ø–æ–∑–∂–µ —ç—Ç–æ–≥–æ –º–µ—Ç–æ–¥–∞, –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –æ—à–∏–±–∫–∞, —Ç–∞–∫ –∫–∞–∫ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –º–æ–¥–µ–ª–∏ –±—É–¥–µ—Ç –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É n, –∞ —è—á–µ–µ–∫ n-1.
//            tableView.endUpdates()
        }
    }
    
    // MARK:  - Table view delegate
    
//    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        let emoji = self.emoji[indexPath.row]
//        print("\(emoji.symbol) \(emoji.name) - \(indexPath)") 
//    }
    
    // MARK: - Navigation
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        super.prepare(for: segue, sender: sender) // –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –≤—Å–µ–≥–¥–∞ –≤—ã–∑—ã–≤–∞—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π, –∫–æ–≥–¥–∞ –µ—Å—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ override.
        
        if segue.identifier == "EditEmojiSegue" {
            if let indexPath = tableView.indexPathForSelectedRow {
                let emoji = self.emoji[indexPath.row]
                guard let navigationController = segue.destination as? UINavigationController else { return }
                guard let addEditTableViewController = navigationController.viewControllers.first as? AddEditTableViewController else { return } //  = navigationController.topViewController
                addEditTableViewController.navigationItem.title = "Edit"
                addEditTableViewController.emoji = emoji
            }
        }
    }
    
    @IBAction func unwindToTableView(segue: UIStoryboardSegue) {
        guard segue.identifier == "saveUnwind" else { return }
        
        guard let sourceViewController = segue.source as? AddEditTableViewController else { return }
        
        guard let newOrEditingEmoji = sourceViewController.emoji else { return }
        
        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, —Ç–æ —è—á–µ–π–∫–∞ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è - —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ (Edit), –∏–Ω–∞—á–µ (–µ—Å–ª–∏ –Ω–∞–∂–∏–º–∞–µ—Ç—Å—è –ø–ª—é—Å (Add), indexPathForSelectedRow = nil), —Ç–æ  —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è —è—á–µ–π–∫–∞ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –í–æ–∑–º–æ–∂–µ–Ω –∏ –¥—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: –µ—Å–ª–∏ title AddEditTableViewController Edit, —Ç–æ –Ω–∞–¥–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —è—á–µ–π–∫—É, –∞ –µ—Å–ª–∏ title = Add, —Ç–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—É—é —è—á–µ–π–∫—É.
//        if sourceViewController.title == "Edit" {
        if let selectedIndexPath = tableView.indexPathForSelectedRow {
            emoji[selectedIndexPath.row] = newOrEditingEmoji
            tableView.reloadRows(at: [selectedIndexPath], with: .fade) // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏.
//        } else if sourceViewController.title = "Add" {
        } else {
            emoji.append(newOrEditingEmoji)
            let newIndexPath = IndexPath(row: emoji.count - 1, section: 0)
            tableView.insertRows(at: [newIndexPath], with: .fade) // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü —Ç–∞–±–ª–∏—Ü—ã (–∫–æ–Ω–µ—Ü —Ç–∞–±–ª–∏—Ü—ã, —Ç–∞–∫ –∫–∞–∫ newIndexPath.row = emoji.count-1) –Ω–æ–≤–æ–π —è—á–µ–π–∫–∏ —Å  –Ω–æ–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º.
        }
    }
}
